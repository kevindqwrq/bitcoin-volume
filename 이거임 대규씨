import time
import pyupbit
import datetime

access = "fVV3wBhxyNK8KITeP39NUvxClYLDo2L0kDe2u3ly"
secret = "bpPGFJBsDYrBfLdce8tNivxY2V4kZu3B0Lc7Tveo"


# 최대 거래량 코인
def get_max_volume():
    coins= ['KRW-BTC', 'KRW-XRP', 'KRW-BTG', 'KRW-ETC', 'KRW-ADA', 'KRW-BCH', 'KRW-AXS', 'KRW-QTUM', 'KRW-NEO', 'KRW-BTT']
    volume_rate = []
    for i in range(10): #10개만 보는거
        coin = coins[i]
        data = pyupbit.get_ohlcv(ticker = coin, interval='minute5', count=2)
        volume_change_rate = float(data.volume[1]) - float(data.volume[0])
        print("다음 코인:" + coin + "의 5분간 거래 변화량: " + str(volume_change_rate))
        volume_rate.append(volume_change_rate)
        max_index = find_max(volume_rate)
        print()
        print("5분간 최대 변화량의 코인은: "+coins[max_index]+" 값은: " + str(volume_rate[max_index]))
        return coins[max_index]






def get_target_price(ticker, k): 
    """변동성 돌파 전략으로 매수 목표가 조회"""
    df = pyupbit.get_ohlcv(ticker, interval="day", count=14)
    target_price = df.iloc[0]['close'] + (df.iloc[0]['high'] - df.iloc[0]['low']) * k
    return target_price

def get_start_time(ticker):
    """시작 시간 조회"""
    df = pyupbit.get_ohlcv(ticker, interval="day", count=1)
    start_time = df.index[0]
    return start_time

def get_balance(ticker):
    """잔고 조회"""
    balances = upbit.get_balances()
    for b in balances:
        if b['currency'] == ticker:
            if b['balance'] is not None:
                return float(b['balance'])
            else:
                return 0
    return 0

def get_current_price(ticker):
    """현재가 조회"""
    return pyupbit.get_orderbook(tickers=ticker)[0]["orderbook_units"][0]["ask_price"]

# 로그인
upbit = pyupbit.Upbit(access, secret)
print("autotrade start")

# 자동매매 시작
while True:
    try:
        now = datetime.datetime.now()
        start_time = get_start_time("KRW-BTC")
        end_time = start_time + datetime.timedelta(days=1)
        bitcoin = get_max_volume()

        if start_time < now < end_time - datetime.timedelta(seconds=10):
            target_price = get_target_price(bitcoin , 0.5)
            current_price = get_current_price(bitcoin)
            if target_price < current_price:
                krw = get_balance("KRW")
                if krw > 5000:
                    upbit.buy_market_order(bitcoin, krw*0.9995)
        else:
            btc = get_balance(bitcoin)
            if btc > 0.00008:
                upbit.sell_market_order(bitcoin, btc*0.9995)
        time.sleep(1)
    except Exception as e:
        print(e)
        time.sleep(1)
